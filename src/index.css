@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: 'PressStart2P Regular';
  src: local('PressStart2P Regular'),
    url('./assets/font/PressStart2P Regular.ttf') format('truetype');
}

:root {
  font-family: 'PressStart2P Regular', fallback, Inter, system-ui, Avenir,
    Helvetica, Arial, sans-serif;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  @apply bg-neutral-950 text-white;
}

.react-colorful__pointer,
.react-colorful__hue-pointer {
  --size: 16px;
  width: var(--size) !important;
  height: var(--size) !important;
}

#popUp {
  opacity: 0;
  transition: 0.2s;
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
}

#popUpContainer:not(:focus-within) #popUp {
  opacity: 0;
  pointer-events: none;
}

#popUpContainer {
  position: relative;
}

#popUpContainer:focus-within + #popUp {
  pointer-events: none;
  opacity: 1;
  transition: 0.5s;
  animation: clipPathTransition 1s cubic-bezier(0.85, 0, 0.15, 1);
  animation-fill-mode: forwards;
}

#customcolor:focus-within + #popUp {
  opacity: 1;
}

:is(#popUpContainer:focus-within, #customcolor:focus-within) + #popUp {
  opacity: 1;
}

#popupButton:focus-within + #popUp {
  opacity: 1;
}

@keyframes clipPathTransition {
  0% {
    clip-path: inset(100% 0 0 0);
  }
  100% {
    clip-path: inset(0);
  }
}

::-webkit-resizer {
   width: 0px;
   height: 0px;
   border-style: solid;
   border-width: 0 0 32px 32px;
   border-color: transparent transparent #FFFFFF50 transparent;
   transform: rotate(0deg);
   padding: 5px;
}

#settings::afte {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  pointer-events: none;
  background-image: linear-gradient(
      to top,
      rgba(255, 255, 255, 0.2) 33.33333%,
      rgba(255, 255, 255, 0.4) 33.33333%,
      rgba(255, 255, 255, 0.4) 66.66666%,
      rgba(255, 255, 255, 0.6) 66.66666%
    ),
    linear-gradient(
      to right,
      rgba(255, 0, 0, 0.7) 33.33333%,
      rgba(0, 255, 0, 0.7) 33.33333%,
      rgba(0, 255, 0, 0.7) 66.66666%,
      rgba(0, 0, 255, 0.7) 66.66666%
    );
  background-size: 2px;
  mix-blend-mode: multiply;
}


.slider {
  appearance: none;
  margin-top: 10px;
  width: 100%;
  height: 5px;
  background: repeating-linear-gradient(
    90deg,
    #000,
    #000 10px,
    #fff 10px,
    #fff 12px
  );
  outline: none;
  opacity: 0.7;
  -webkit-transition: .2s;
  transition: opacity .2s;
}

.slider:hover {
  opacity: 1;
}


.slider::-webkit-slider-thumb::before {
  -webkit-appearance: none;
  position: absolute;
  top: 0;
  left: 0;
  appearance: none;
  width: 40px;
  height: 500px;
  background: yellow;
  cursor: pointer;
}

.slider::-moz-range-thumb {
  width: 25px;
  height: 25px;
  background: black;
  cursor: pointer;
}

#rightArrow {
  animation: rightAnimation 0.5s infinite alternate; 
}

@keyframes rightAnimation {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(2px);
  }
}

#leftArrow {
  animation: leftAnimation 0.5s infinite alternate; 
}

@keyframes leftAnimation {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-2px);
  }
}


:is(#firstColor, #secondColor, #textColor) {
  appearance: none;
  margin: 10px 0px;
  width: 100%;
  height: 5px;
  background: repeating-linear-gradient(
    90deg,
    transparent,
    transparent 10px,
    #fff 10px,
    #fff 12px
  );
  outline: none;
  opacity: 0.5;
  -webkit-transition: .2s;
  transition: opacity .2s;
}

:is(#firstColor, #secondColor, #textColor):hover {
  opacity: 1;
}

:is(#firstColor, #secondColor, #textColor)::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 25px;
  height: 15px;
  border: solid 2px black;
  cursor: pointer;
  opacity: 1;
  box-shadow: 0 0 0 1px  white inset;
}

#firstColor::-webkit-slider-thumb {
  background: var(--firstColor, #000);
}

#firstColor::-moz-range-thumb {
  background: var(--firstColor, #000);
}

#secondColor::-webkit-slider-thumb {
  background: var(--secondColor, #000);
}

#secondColor::-moz-range-thumb {
  background: var(--secondColor, #000);
}

#textColor::-webkit-slider-thumb {
  background: var(--textColor, #000);
}

#textColor::-moz-range-thumb {
  background: var(--textColor, #000);
}

:is(#firstColor, #secondColor ,#textColor)::-moz-range-thumb {
  width: 25px;
  height: 15px;
  border: solid 2px black;
  mix-blend-mode: screen;
  cursor: pointer;
  opacity: 1;
}

.form-control {
  font-size: 14px;
  font-weight: bold;
  line-height: 1.1;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 0.5em;
}

.form-control + .form-control {
  margin-top: 1em;
}

.form-control--disabled {
  color: black;
  cursor: not-allowed;
}

.custom-checkbox[type="checkbox"] {
  /* Add if not using autoprefixer */
  -webkit-appearance: none;
  /* Remove most all native input styles */
  appearance: none;
  /* For iOS < 15 */
  background-color: black;
  /* Not removed via appearance */
  margin: 0;

  font: inherit;
  color: currentColor;
  width: 1.5em;
  height: 1.5em;
  border: 2px solid currentColor;
  transform: translateY(-0.075em);

  display: grid;
  place-content: center;
  cursor: pointer;
}

.custom-checkbox[type="checkbox"]::before {
  content: "";
  width: 0.65em;
  height: 0.65em;
  transform: scale(0);
  transition: 120ms transform ease-in-out;
  box-shadow: inset 1em 1em white;
}

.custom-checkbox[type="checkbox"]:checked::before {
  transform: scale(1);
}